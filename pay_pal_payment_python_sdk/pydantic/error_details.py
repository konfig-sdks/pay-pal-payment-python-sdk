# coding: utf-8

"""
    Payments

    Call the Payments API to authorize payments, capture authorized payments, refund payments that have already been captured, and show payment information. Use the Payments API in conjunction with the <a href=\"/docs/api/orders/v2/\">Orders API</a>. For more information, see the <a href=\"/docs/checkout/\">PayPal Checkout Overview</a>.

    The version of the OpenAPI document: 2.5
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from pay_pal_payment_python_sdk.pydantic.error_location import ErrorLocation

class ErrorDetails(BaseModel):
    # The unique, fine-grained application-level error code.
    issue: str = Field(alias='issue')

    # The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value.
    description: typing.Optional[str] = Field(None, alias='description')

    # The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors.
    field: typing.Optional[str] = Field(None, alias='field')

    # The value of the field that caused the error.
    value: typing.Optional[str] = Field(None, alias='value')

    location: typing.Optional[ErrorLocation] = Field(None, alias='location')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
