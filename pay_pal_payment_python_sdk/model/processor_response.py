# coding: utf-8

"""
    Payments

    Call the Payments API to authorize payments, capture authorized payments, refund payments that have already been captured, and show payment information. Use the Payments API in conjunction with the <a href=\"/docs/api/orders/v2/\">Orders API</a>. For more information, see the <a href=\"/docs/checkout/\">PayPal Checkout Overview</a>.

    The version of the OpenAPI document: 2.5
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from pay_pal_payment_python_sdk import schemas  # noqa: F401


class ProcessorResponse(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    The processor response information for payment requests, such as direct credit card transactions.
    """


    class MetaOapg:
        
        class properties:
            
            
            class avs_code(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "A": "A",
                        "B": "B",
                        "C": "C",
                        "D": "D",
                        "E": "E",
                        "F": "F",
                        "G": "G",
                        "I": "I",
                        "M": "M",
                        "N": "N",
                        "P": "P",
                        "R": "R",
                        "S": "S",
                        "U": "U",
                        "W": "W",
                        "X": "X",
                        "Y": "Y",
                        "Z": "Z",
                        "Null": "NULL",
                        "0": "POSITIVE_0",
                        "1": "POSITIVE_1",
                        "2": "POSITIVE_2",
                        "3": "POSITIVE_3",
                        "4": "POSITIVE_4",
                    }
                
                @schemas.classproperty
                def A(cls):
                    return cls("A")
                
                @schemas.classproperty
                def B(cls):
                    return cls("B")
                
                @schemas.classproperty
                def C(cls):
                    return cls("C")
                
                @schemas.classproperty
                def D(cls):
                    return cls("D")
                
                @schemas.classproperty
                def E(cls):
                    return cls("E")
                
                @schemas.classproperty
                def F(cls):
                    return cls("F")
                
                @schemas.classproperty
                def G(cls):
                    return cls("G")
                
                @schemas.classproperty
                def I(cls):
                    return cls("I")
                
                @schemas.classproperty
                def M(cls):
                    return cls("M")
                
                @schemas.classproperty
                def N(cls):
                    return cls("N")
                
                @schemas.classproperty
                def P(cls):
                    return cls("P")
                
                @schemas.classproperty
                def R(cls):
                    return cls("R")
                
                @schemas.classproperty
                def S(cls):
                    return cls("S")
                
                @schemas.classproperty
                def U(cls):
                    return cls("U")
                
                @schemas.classproperty
                def W(cls):
                    return cls("W")
                
                @schemas.classproperty
                def X(cls):
                    return cls("X")
                
                @schemas.classproperty
                def Y(cls):
                    return cls("Y")
                
                @schemas.classproperty
                def Z(cls):
                    return cls("Z")
                
                @schemas.classproperty
                def NULL(cls):
                    return cls("Null")
                
                @schemas.classproperty
                def POSITIVE_0(cls):
                    return cls("0")
                
                @schemas.classproperty
                def POSITIVE_1(cls):
                    return cls("1")
                
                @schemas.classproperty
                def POSITIVE_2(cls):
                    return cls("2")
                
                @schemas.classproperty
                def POSITIVE_3(cls):
                    return cls("3")
                
                @schemas.classproperty
                def POSITIVE_4(cls):
                    return cls("4")
            
            
            class cvv_code(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "E": "E",
                        "I": "I",
                        "M": "M",
                        "N": "N",
                        "P": "P",
                        "S": "S",
                        "U": "U",
                        "X": "X",
                        "All others": "ALL_OTHERS",
                        "0": "POSITIVE_0",
                        "1": "POSITIVE_1",
                        "2": "POSITIVE_2",
                        "3": "POSITIVE_3",
                        "4": "POSITIVE_4",
                    }
                
                @schemas.classproperty
                def E(cls):
                    return cls("E")
                
                @schemas.classproperty
                def I(cls):
                    return cls("I")
                
                @schemas.classproperty
                def M(cls):
                    return cls("M")
                
                @schemas.classproperty
                def N(cls):
                    return cls("N")
                
                @schemas.classproperty
                def P(cls):
                    return cls("P")
                
                @schemas.classproperty
                def S(cls):
                    return cls("S")
                
                @schemas.classproperty
                def U(cls):
                    return cls("U")
                
                @schemas.classproperty
                def X(cls):
                    return cls("X")
                
                @schemas.classproperty
                def ALL_OTHERS(cls):
                    return cls("All others")
                
                @schemas.classproperty
                def POSITIVE_0(cls):
                    return cls("0")
                
                @schemas.classproperty
                def POSITIVE_1(cls):
                    return cls("1")
                
                @schemas.classproperty
                def POSITIVE_2(cls):
                    return cls("2")
                
                @schemas.classproperty
                def POSITIVE_3(cls):
                    return cls("3")
                
                @schemas.classproperty
                def POSITIVE_4(cls):
                    return cls("4")
            
            
            class response_code(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "0000": "POSITIVE_0000",
                        "00N7": "_00N7",
                        "0100": "POSITIVE_0100",
                        "0390": "POSITIVE_0390",
                        "0500": "POSITIVE_0500",
                        "0580": "POSITIVE_0580",
                        "0800": "POSITIVE_0800",
                        "0880": "POSITIVE_0880",
                        "0890": "POSITIVE_0890",
                        "0960": "POSITIVE_0960",
                        "0R00": "_0R00",
                        "1000": "POSITIVE_1000",
                        "10BR": "_10BR",
                        "1300": "POSITIVE_1300",
                        "1310": "POSITIVE_1310",
                        "1312": "POSITIVE_1312",
                        "1317": "POSITIVE_1317",
                        "1320": "POSITIVE_1320",
                        "1330": "POSITIVE_1330",
                        "1335": "POSITIVE_1335",
                        "1340": "POSITIVE_1340",
                        "1350": "POSITIVE_1350",
                        "1352": "POSITIVE_1352",
                        "1360": "POSITIVE_1360",
                        "1370": "POSITIVE_1370",
                        "1380": "POSITIVE_1380",
                        "1382": "POSITIVE_1382",
                        "1384": "POSITIVE_1384",
                        "1390": "POSITIVE_1390",
                        "1393": "POSITIVE_1393",
                        "5100": "POSITIVE_5100",
                        "5110": "POSITIVE_5110",
                        "5120": "POSITIVE_5120",
                        "5130": "POSITIVE_5130",
                        "5135": "POSITIVE_5135",
                        "5140": "POSITIVE_5140",
                        "5150": "POSITIVE_5150",
                        "5160": "POSITIVE_5160",
                        "5170": "POSITIVE_5170",
                        "5180": "POSITIVE_5180",
                        "5190": "POSITIVE_5190",
                        "5200": "POSITIVE_5200",
                        "5210": "POSITIVE_5210",
                        "5400": "POSITIVE_5400",
                        "5500": "POSITIVE_5500",
                        "5650": "POSITIVE_5650",
                        "5700": "POSITIVE_5700",
                        "5710": "POSITIVE_5710",
                        "5800": "POSITIVE_5800",
                        "5900": "POSITIVE_5900",
                        "5910": "POSITIVE_5910",
                        "5920": "POSITIVE_5920",
                        "5930": "POSITIVE_5930",
                        "5950": "POSITIVE_5950",
                        "6300": "POSITIVE_6300",
                        "7600": "POSITIVE_7600",
                        "7700": "POSITIVE_7700",
                        "7710": "POSITIVE_7710",
                        "7800": "POSITIVE_7800",
                        "7900": "POSITIVE_7900",
                        "8000": "POSITIVE_8000",
                        "8010": "POSITIVE_8010",
                        "8020": "POSITIVE_8020",
                        "8030": "POSITIVE_8030",
                        "8100": "POSITIVE_8100",
                        "8110": "POSITIVE_8110",
                        "8220": "POSITIVE_8220",
                        "9100": "POSITIVE_9100",
                        "9500": "POSITIVE_9500",
                        "9510": "POSITIVE_9510",
                        "9520": "POSITIVE_9520",
                        "9530": "POSITIVE_9530",
                        "9540": "POSITIVE_9540",
                        "9600": "POSITIVE_9600",
                        "PCNR": "PCNR",
                        "PCVV": "PCVV",
                        "PP06": "PP06",
                        "PPRN": "PPRN",
                        "PPAD": "PPAD",
                        "PPAB": "PPAB",
                        "PPAE": "PPAE",
                        "PPAG": "PPAG",
                        "PPAI": "PPAI",
                        "PPAR": "PPAR",
                        "PPAU": "PPAU",
                        "PPAV": "PPAV",
                        "PPAX": "PPAX",
                        "PPBG": "PPBG",
                        "PPC2": "PPC2",
                        "PPCE": "PPCE",
                        "PPCO": "PPCO",
                        "PPCR": "PPCR",
                        "PPCT": "PPCT",
                        "PPCU": "PPCU",
                        "PPD3": "PPD3",
                        "PPDC": "PPDC",
                        "PPDI": "PPDI",
                        "PPDV": "PPDV",
                        "PPDT": "PPDT",
                        "PPEF": "PPEF",
                        "PPEL": "PPEL",
                        "PPER": "PPER",
                        "PPEX": "PPEX",
                        "PPFE": "PPFE",
                        "PPFI": "PPFI",
                        "PPFR": "PPFR",
                        "PPFV": "PPFV",
                        "PPGR": "PPGR",
                        "PPH1": "PPH1",
                        "PPIF": "PPIF",
                        "PPII": "PPII",
                        "PPIM": "PPIM",
                        "PPIT": "PPIT",
                        "PPLR": "PPLR",
                        "PPLS": "PPLS",
                        "PPMB": "PPMB",
                        "PPMC": "PPMC",
                        "PPMD": "PPMD",
                        "PPNC": "PPNC",
                        "PPNL": "PPNL",
                        "PPNM": "PPNM",
                        "PPNT": "PPNT",
                        "PPPH": "PPPH",
                        "PPPI": "PPPI",
                        "PPPM": "PPPM",
                        "PPQC": "PPQC",
                        "PPRE": "PPRE",
                        "PPRF": "PPRF",
                        "PPRR": "PPRR",
                        "PPS0": "PPS0",
                        "PPS1": "PPS1",
                        "PPS2": "PPS2",
                        "PPS3": "PPS3",
                        "PPS4": "PPS4",
                        "PPS5": "PPS5",
                        "PPS6": "PPS6",
                        "PPSC": "PPSC",
                        "PPSD": "PPSD",
                        "PPSE": "PPSE",
                        "PPTE": "PPTE",
                        "PPTF": "PPTF",
                        "PPTI": "PPTI",
                        "PPTR": "PPTR",
                        "PPTT": "PPTT",
                        "PPTV": "PPTV",
                        "PPUA": "PPUA",
                        "PPUC": "PPUC",
                        "PPUE": "PPUE",
                        "PPUI": "PPUI",
                        "PPUP": "PPUP",
                        "PPUR": "PPUR",
                        "PPVC": "PPVC",
                        "PPVE": "PPVE",
                        "PPVT": "PPVT",
                    }
                
                @schemas.classproperty
                def POSITIVE_0000(cls):
                    return cls("0000")
                
                @schemas.classproperty
                def _00N7(cls):
                    return cls("00N7")
                
                @schemas.classproperty
                def POSITIVE_0100(cls):
                    return cls("0100")
                
                @schemas.classproperty
                def POSITIVE_0390(cls):
                    return cls("0390")
                
                @schemas.classproperty
                def POSITIVE_0500(cls):
                    return cls("0500")
                
                @schemas.classproperty
                def POSITIVE_0580(cls):
                    return cls("0580")
                
                @schemas.classproperty
                def POSITIVE_0800(cls):
                    return cls("0800")
                
                @schemas.classproperty
                def POSITIVE_0880(cls):
                    return cls("0880")
                
                @schemas.classproperty
                def POSITIVE_0890(cls):
                    return cls("0890")
                
                @schemas.classproperty
                def POSITIVE_0960(cls):
                    return cls("0960")
                
                @schemas.classproperty
                def _0R00(cls):
                    return cls("0R00")
                
                @schemas.classproperty
                def POSITIVE_1000(cls):
                    return cls("1000")
                
                @schemas.classproperty
                def _10BR(cls):
                    return cls("10BR")
                
                @schemas.classproperty
                def POSITIVE_1300(cls):
                    return cls("1300")
                
                @schemas.classproperty
                def POSITIVE_1310(cls):
                    return cls("1310")
                
                @schemas.classproperty
                def POSITIVE_1312(cls):
                    return cls("1312")
                
                @schemas.classproperty
                def POSITIVE_1317(cls):
                    return cls("1317")
                
                @schemas.classproperty
                def POSITIVE_1320(cls):
                    return cls("1320")
                
                @schemas.classproperty
                def POSITIVE_1330(cls):
                    return cls("1330")
                
                @schemas.classproperty
                def POSITIVE_1335(cls):
                    return cls("1335")
                
                @schemas.classproperty
                def POSITIVE_1340(cls):
                    return cls("1340")
                
                @schemas.classproperty
                def POSITIVE_1350(cls):
                    return cls("1350")
                
                @schemas.classproperty
                def POSITIVE_1352(cls):
                    return cls("1352")
                
                @schemas.classproperty
                def POSITIVE_1360(cls):
                    return cls("1360")
                
                @schemas.classproperty
                def POSITIVE_1370(cls):
                    return cls("1370")
                
                @schemas.classproperty
                def POSITIVE_1380(cls):
                    return cls("1380")
                
                @schemas.classproperty
                def POSITIVE_1382(cls):
                    return cls("1382")
                
                @schemas.classproperty
                def POSITIVE_1384(cls):
                    return cls("1384")
                
                @schemas.classproperty
                def POSITIVE_1390(cls):
                    return cls("1390")
                
                @schemas.classproperty
                def POSITIVE_1393(cls):
                    return cls("1393")
                
                @schemas.classproperty
                def POSITIVE_5100(cls):
                    return cls("5100")
                
                @schemas.classproperty
                def POSITIVE_5110(cls):
                    return cls("5110")
                
                @schemas.classproperty
                def POSITIVE_5120(cls):
                    return cls("5120")
                
                @schemas.classproperty
                def POSITIVE_5130(cls):
                    return cls("5130")
                
                @schemas.classproperty
                def POSITIVE_5135(cls):
                    return cls("5135")
                
                @schemas.classproperty
                def POSITIVE_5140(cls):
                    return cls("5140")
                
                @schemas.classproperty
                def POSITIVE_5150(cls):
                    return cls("5150")
                
                @schemas.classproperty
                def POSITIVE_5160(cls):
                    return cls("5160")
                
                @schemas.classproperty
                def POSITIVE_5170(cls):
                    return cls("5170")
                
                @schemas.classproperty
                def POSITIVE_5180(cls):
                    return cls("5180")
                
                @schemas.classproperty
                def POSITIVE_5190(cls):
                    return cls("5190")
                
                @schemas.classproperty
                def POSITIVE_5200(cls):
                    return cls("5200")
                
                @schemas.classproperty
                def POSITIVE_5210(cls):
                    return cls("5210")
                
                @schemas.classproperty
                def POSITIVE_5400(cls):
                    return cls("5400")
                
                @schemas.classproperty
                def POSITIVE_5500(cls):
                    return cls("5500")
                
                @schemas.classproperty
                def POSITIVE_5650(cls):
                    return cls("5650")
                
                @schemas.classproperty
                def POSITIVE_5700(cls):
                    return cls("5700")
                
                @schemas.classproperty
                def POSITIVE_5710(cls):
                    return cls("5710")
                
                @schemas.classproperty
                def POSITIVE_5800(cls):
                    return cls("5800")
                
                @schemas.classproperty
                def POSITIVE_5900(cls):
                    return cls("5900")
                
                @schemas.classproperty
                def POSITIVE_5910(cls):
                    return cls("5910")
                
                @schemas.classproperty
                def POSITIVE_5920(cls):
                    return cls("5920")
                
                @schemas.classproperty
                def POSITIVE_5930(cls):
                    return cls("5930")
                
                @schemas.classproperty
                def POSITIVE_5950(cls):
                    return cls("5950")
                
                @schemas.classproperty
                def POSITIVE_6300(cls):
                    return cls("6300")
                
                @schemas.classproperty
                def POSITIVE_7600(cls):
                    return cls("7600")
                
                @schemas.classproperty
                def POSITIVE_7700(cls):
                    return cls("7700")
                
                @schemas.classproperty
                def POSITIVE_7710(cls):
                    return cls("7710")
                
                @schemas.classproperty
                def POSITIVE_7800(cls):
                    return cls("7800")
                
                @schemas.classproperty
                def POSITIVE_7900(cls):
                    return cls("7900")
                
                @schemas.classproperty
                def POSITIVE_8000(cls):
                    return cls("8000")
                
                @schemas.classproperty
                def POSITIVE_8010(cls):
                    return cls("8010")
                
                @schemas.classproperty
                def POSITIVE_8020(cls):
                    return cls("8020")
                
                @schemas.classproperty
                def POSITIVE_8030(cls):
                    return cls("8030")
                
                @schemas.classproperty
                def POSITIVE_8100(cls):
                    return cls("8100")
                
                @schemas.classproperty
                def POSITIVE_8110(cls):
                    return cls("8110")
                
                @schemas.classproperty
                def POSITIVE_8220(cls):
                    return cls("8220")
                
                @schemas.classproperty
                def POSITIVE_9100(cls):
                    return cls("9100")
                
                @schemas.classproperty
                def POSITIVE_9500(cls):
                    return cls("9500")
                
                @schemas.classproperty
                def POSITIVE_9510(cls):
                    return cls("9510")
                
                @schemas.classproperty
                def POSITIVE_9520(cls):
                    return cls("9520")
                
                @schemas.classproperty
                def POSITIVE_9530(cls):
                    return cls("9530")
                
                @schemas.classproperty
                def POSITIVE_9540(cls):
                    return cls("9540")
                
                @schemas.classproperty
                def POSITIVE_9600(cls):
                    return cls("9600")
                
                @schemas.classproperty
                def PCNR(cls):
                    return cls("PCNR")
                
                @schemas.classproperty
                def PCVV(cls):
                    return cls("PCVV")
                
                @schemas.classproperty
                def PP06(cls):
                    return cls("PP06")
                
                @schemas.classproperty
                def PPRN(cls):
                    return cls("PPRN")
                
                @schemas.classproperty
                def PPAD(cls):
                    return cls("PPAD")
                
                @schemas.classproperty
                def PPAB(cls):
                    return cls("PPAB")
                
                @schemas.classproperty
                def PPAE(cls):
                    return cls("PPAE")
                
                @schemas.classproperty
                def PPAG(cls):
                    return cls("PPAG")
                
                @schemas.classproperty
                def PPAI(cls):
                    return cls("PPAI")
                
                @schemas.classproperty
                def PPAR(cls):
                    return cls("PPAR")
                
                @schemas.classproperty
                def PPAU(cls):
                    return cls("PPAU")
                
                @schemas.classproperty
                def PPAV(cls):
                    return cls("PPAV")
                
                @schemas.classproperty
                def PPAX(cls):
                    return cls("PPAX")
                
                @schemas.classproperty
                def PPBG(cls):
                    return cls("PPBG")
                
                @schemas.classproperty
                def PPC2(cls):
                    return cls("PPC2")
                
                @schemas.classproperty
                def PPCE(cls):
                    return cls("PPCE")
                
                @schemas.classproperty
                def PPCO(cls):
                    return cls("PPCO")
                
                @schemas.classproperty
                def PPCR(cls):
                    return cls("PPCR")
                
                @schemas.classproperty
                def PPCT(cls):
                    return cls("PPCT")
                
                @schemas.classproperty
                def PPCU(cls):
                    return cls("PPCU")
                
                @schemas.classproperty
                def PPD3(cls):
                    return cls("PPD3")
                
                @schemas.classproperty
                def PPDC(cls):
                    return cls("PPDC")
                
                @schemas.classproperty
                def PPDI(cls):
                    return cls("PPDI")
                
                @schemas.classproperty
                def PPDV(cls):
                    return cls("PPDV")
                
                @schemas.classproperty
                def PPDT(cls):
                    return cls("PPDT")
                
                @schemas.classproperty
                def PPEF(cls):
                    return cls("PPEF")
                
                @schemas.classproperty
                def PPEL(cls):
                    return cls("PPEL")
                
                @schemas.classproperty
                def PPER(cls):
                    return cls("PPER")
                
                @schemas.classproperty
                def PPEX(cls):
                    return cls("PPEX")
                
                @schemas.classproperty
                def PPFE(cls):
                    return cls("PPFE")
                
                @schemas.classproperty
                def PPFI(cls):
                    return cls("PPFI")
                
                @schemas.classproperty
                def PPFR(cls):
                    return cls("PPFR")
                
                @schemas.classproperty
                def PPFV(cls):
                    return cls("PPFV")
                
                @schemas.classproperty
                def PPGR(cls):
                    return cls("PPGR")
                
                @schemas.classproperty
                def PPH1(cls):
                    return cls("PPH1")
                
                @schemas.classproperty
                def PPIF(cls):
                    return cls("PPIF")
                
                @schemas.classproperty
                def PPII(cls):
                    return cls("PPII")
                
                @schemas.classproperty
                def PPIM(cls):
                    return cls("PPIM")
                
                @schemas.classproperty
                def PPIT(cls):
                    return cls("PPIT")
                
                @schemas.classproperty
                def PPLR(cls):
                    return cls("PPLR")
                
                @schemas.classproperty
                def PPLS(cls):
                    return cls("PPLS")
                
                @schemas.classproperty
                def PPMB(cls):
                    return cls("PPMB")
                
                @schemas.classproperty
                def PPMC(cls):
                    return cls("PPMC")
                
                @schemas.classproperty
                def PPMD(cls):
                    return cls("PPMD")
                
                @schemas.classproperty
                def PPNC(cls):
                    return cls("PPNC")
                
                @schemas.classproperty
                def PPNL(cls):
                    return cls("PPNL")
                
                @schemas.classproperty
                def PPNM(cls):
                    return cls("PPNM")
                
                @schemas.classproperty
                def PPNT(cls):
                    return cls("PPNT")
                
                @schemas.classproperty
                def PPPH(cls):
                    return cls("PPPH")
                
                @schemas.classproperty
                def PPPI(cls):
                    return cls("PPPI")
                
                @schemas.classproperty
                def PPPM(cls):
                    return cls("PPPM")
                
                @schemas.classproperty
                def PPQC(cls):
                    return cls("PPQC")
                
                @schemas.classproperty
                def PPRE(cls):
                    return cls("PPRE")
                
                @schemas.classproperty
                def PPRF(cls):
                    return cls("PPRF")
                
                @schemas.classproperty
                def PPRR(cls):
                    return cls("PPRR")
                
                @schemas.classproperty
                def PPS0(cls):
                    return cls("PPS0")
                
                @schemas.classproperty
                def PPS1(cls):
                    return cls("PPS1")
                
                @schemas.classproperty
                def PPS2(cls):
                    return cls("PPS2")
                
                @schemas.classproperty
                def PPS3(cls):
                    return cls("PPS3")
                
                @schemas.classproperty
                def PPS4(cls):
                    return cls("PPS4")
                
                @schemas.classproperty
                def PPS5(cls):
                    return cls("PPS5")
                
                @schemas.classproperty
                def PPS6(cls):
                    return cls("PPS6")
                
                @schemas.classproperty
                def PPSC(cls):
                    return cls("PPSC")
                
                @schemas.classproperty
                def PPSD(cls):
                    return cls("PPSD")
                
                @schemas.classproperty
                def PPSE(cls):
                    return cls("PPSE")
                
                @schemas.classproperty
                def PPTE(cls):
                    return cls("PPTE")
                
                @schemas.classproperty
                def PPTF(cls):
                    return cls("PPTF")
                
                @schemas.classproperty
                def PPTI(cls):
                    return cls("PPTI")
                
                @schemas.classproperty
                def PPTR(cls):
                    return cls("PPTR")
                
                @schemas.classproperty
                def PPTT(cls):
                    return cls("PPTT")
                
                @schemas.classproperty
                def PPTV(cls):
                    return cls("PPTV")
                
                @schemas.classproperty
                def PPUA(cls):
                    return cls("PPUA")
                
                @schemas.classproperty
                def PPUC(cls):
                    return cls("PPUC")
                
                @schemas.classproperty
                def PPUE(cls):
                    return cls("PPUE")
                
                @schemas.classproperty
                def PPUI(cls):
                    return cls("PPUI")
                
                @schemas.classproperty
                def PPUP(cls):
                    return cls("PPUP")
                
                @schemas.classproperty
                def PPUR(cls):
                    return cls("PPUR")
                
                @schemas.classproperty
                def PPVC(cls):
                    return cls("PPVC")
                
                @schemas.classproperty
                def PPVE(cls):
                    return cls("PPVE")
                
                @schemas.classproperty
                def PPVT(cls):
                    return cls("PPVT")
            
            
            class payment_advice_code(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "01": "POSITIVE_01",
                        "02": "POSITIVE_02",
                        "03": "POSITIVE_03",
                        "21": "POSITIVE_21",
                    }
                
                @schemas.classproperty
                def POSITIVE_01(cls):
                    return cls("01")
                
                @schemas.classproperty
                def POSITIVE_02(cls):
                    return cls("02")
                
                @schemas.classproperty
                def POSITIVE_03(cls):
                    return cls("03")
                
                @schemas.classproperty
                def POSITIVE_21(cls):
                    return cls("21")
            __annotations__ = {
                "avs_code": avs_code,
                "cvv_code": cvv_code,
                "response_code": response_code,
                "payment_advice_code": payment_advice_code,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["avs_code"]) -> MetaOapg.properties.avs_code: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cvv_code"]) -> MetaOapg.properties.cvv_code: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["response_code"]) -> MetaOapg.properties.response_code: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["payment_advice_code"]) -> MetaOapg.properties.payment_advice_code: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["avs_code", "cvv_code", "response_code", "payment_advice_code", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["avs_code"]) -> typing.Union[MetaOapg.properties.avs_code, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cvv_code"]) -> typing.Union[MetaOapg.properties.cvv_code, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["response_code"]) -> typing.Union[MetaOapg.properties.response_code, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["payment_advice_code"]) -> typing.Union[MetaOapg.properties.payment_advice_code, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["avs_code", "cvv_code", "response_code", "payment_advice_code", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        avs_code: typing.Union[MetaOapg.properties.avs_code, str, schemas.Unset] = schemas.unset,
        cvv_code: typing.Union[MetaOapg.properties.cvv_code, str, schemas.Unset] = schemas.unset,
        response_code: typing.Union[MetaOapg.properties.response_code, str, schemas.Unset] = schemas.unset,
        payment_advice_code: typing.Union[MetaOapg.properties.payment_advice_code, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ProcessorResponse':
        return super().__new__(
            cls,
            *args,
            avs_code=avs_code,
            cvv_code=cvv_code,
            response_code=response_code,
            payment_advice_code=payment_advice_code,
            _configuration=_configuration,
            **kwargs,
        )
